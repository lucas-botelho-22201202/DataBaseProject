-- <> create database <>
-------------------------
IF NOT EXISTS (SELECT name  FROM master.dbo.sysdatabases WHERE name = 'tfc')
BEGIN
    CREATE DATABASE tfc;
END;
GO

USE tfc;

-- <> create tables <> --
-------------------------
---- curso
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Curso')
BEGIN
	CREATE TABLE Curso (
		id BIGINT NULL,
		nome VARCHAR(255) NULL);
END;
---- tecnologia
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Tecnologia')
BEGIN
	CREATE TABLE Tecnologia (
		id BIGINT NULL,
		nome VARCHAR(255) NULL);
END;
---- disciplina
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Disciplina')
BEGIN
	CREATE TABLE Disciplina (
		id BIGINT NULL,
		cursoAssociado BIGINT NULL,
		nome VARCHAR(255) NULL);
END;
---- aluno
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Aluno')
BEGIN
	CREATE TABLE Aluno (
		id BIGINT NULL,
		curso VARCHAR(255) NULL,
		email VARCHAR(255) NULL,
		nome VARCHAR(255) NULL,
		numeroAluno VARCHAR(255) NULL,
		numeroContato INT NULL);
END;
---- avaliacao-disciplina-aluno
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'AvaliacaoDisciplinaAluno')
BEGIN
	CREATE TABLE AvaliacaoDisciplinaAluno (
		id BIGINT NULL,
		idNumeroAluno BIGINT NULL,
		idNumeroDisciplina BIGINT NULL,
		nota INT NULL);
END;
---- grupo
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Grupo')
BEGIN
	CREATE TABLE Grupo (
		id BIGINT NULL,
		confirmaAluno1 TINYINT NULL,
		confirmaAluno2 TINYINT NULL,
		idNumeroAluno1 VARCHAR(255) NULL,
		idNumeroAluno2 VARCHAR(255) NULL);
END;
---- utilizador
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Utilizador')
BEGIN
	CREATE TABLE Utilizador (
		id BIGINT NULL,
		coordenador TINYINT NULL,
		idIdentificacao VARCHAR(255) NULL,
		tipoUtilizador VARCHAR(255) NULL);
END;
---- inscricao
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Inscricao')
BEGIN
	CREATE TABLE Inscricao (
		id BIGINT NULL,
		estado VARCHAR(255) NULL,
		idNumeroGrupo BIGINT NULL,
		idTFC VARCHAR(255) NULL,
		numeroAluno VARCHAR(255) NULL,
		ordemEscolha INT NULL,
		registoDeInscricao DATETIME NULL,
		publicado TINYINT NULL,
		anoLetivo VARCHAR(255) NULL);
END;
---- professor-deisi
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'ProfessorDEISI')
BEGIN
	CREATE TABLE ProfessorDEISI (
		id BIGINT NULL,
		email VARCHAR(255) NULL,
		nome VARCHAR(255) NULL,
		numeroContato INT NULL,
		numeroProfessor VARCHAR(255) NULL);
END;
---- professor-n-deisi
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'ProfessorNDEISI')
BEGIN
	CREATE TABLE ProfessorNDEISI (
		id BIGINT NULL,
		departamentoAfeto VARCHAR(255) NULL,
		email VARCHAR(255) NULL,
		idProfessor VARCHAR(255) NULL,
		nome VARCHAR(255) NULL,
		numeroContato INT NULL);
END;
---- empresa-entidade-externa
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Empresa_EntidadeExterna')
BEGIN
	CREATE TABLE Empresa_EntidadeExterna (
		id BIGINT NULL,
		email VARCHAR(255) NULL,
		idEmpresa VARCHAR(255) NULL,
		interlocutor VARCHAR(255) NULL,
		morada VARCHAR(255) NULL,
		nome VARCHAR(255) NULL,
		numeroContato INT NULL);
END;
---- tfc
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TFC')
BEGIN
	CREATE TABLE TFC (
		id BIGINT NULL,
		titulo VARCHAR(255) NULL,
		anoletivo VARCHAR(255) NULL,
		avaliacaoProposta VARCHAR(255) NULL,
		coorientador VARCHAR(255) NULL,
		dataEstado VARCHAR(255) NULL,
		dataProposta VARCHAR(255) NULL,
		descricao TEXT NULL,
		entidade BIGINT NULL,
		estado VARCHAR(255) NULL,
		idGrupo BIGINT NULL,
		idtfc VARCHAR(255) NULL,
		motivoRecusa VARCHAR(255) NULL,
		numeroInscricoes INT NULL,
		orientador VARCHAR(255) NULL,
		orientadorProposto VARCHAR(255) NULL,
		preponente VARCHAR(255) NULL,
		semestre INT NULL,
		tecnologias VARCHAR(255) NULL);
END;
---- tfc-curso
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TFCCurso')
BEGIN
	CREATE TABLE TFCCurso (
		id BIGINT NULL,
		idCurso BIGINT NULL,
		idTFC BIGINT NULL);
END;
---- tfc-tecnologia
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TFCTecnologia')
BEGIN
	CREATE TABLE TFCTecnologia (
		id BIGINT NULL,
		idTFC BIGINT NULL,
		idTecnologia BIGINT NULL);
END;
---- tfc-disciplina
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'TFCDisciplina')
BEGIN
	CREATE TABLE TFCDisciplina (
		id BIGINT NULL,
		idNumeroDisciplina BIGINT NULL,
		numeroTFC BIGINT NULL);
END;
---- historico-tfc
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'HistoricoTFC')
BEGIN
	CREATE TABLE HistoricoTFC (
		id BIGINT NULL,
		avaliacao VARCHAR(255) NULL,
		dataMudancaEstado VARCHAR(255) NULL,
		estado VARCHAR(255) NULL,
		idTFC VARCHAR(255) NULL,
		idTFCNumerico BIGINT NULL,
		utilizador VARCHAR(255) NULL);
END;

GO

-- limpar BD

--curso
select count(*) from Curso WHERE id IS NULL or nome IS NULL; 
DELETE FROM Curso WHERE nome IS NULL or id IS NULL;
select count(*) from Curso WHERE id IS NULL or nome IS NULL; 
--tecnologia
select count(*) from Tecnologia WHERE id IS NULL or nome IS NULL; 
DELETE FROM Tecnologia WHERE nome IS NULL or id IS NULL;
select count(*) from Tecnologia WHERE id IS NULL or nome IS NULL; 
--disciplina
select count(*) from Disciplina WHERE id IS NULL or cursoAssociado is null or nome IS NULL; 
DELETE FROM Disciplina WHERE id IS NULL or cursoAssociado is null or nome IS NULL; 
select count(*) from Disciplina WHERE id IS NULL or cursoAssociado is null or nome IS NULL; 
--aluno
select count(*) from Aluno WHERE id IS NULL or nome is null or numeroAluno IS NULL; 
DELETE FROM Aluno WHERE id IS NULL or nome is null or numeroAluno IS NULL; 
select count(*) from Aluno WHERE id IS NULL or nome is null or numeroAluno IS NULL; 
--avaliacaodisciplinaaluno
select count(*) from AvaliacaoDisciplinaAluno WHERE id IS NULL or idNumeroAluno is null or idNumeroDisciplina IS NULL or nota IS NULL; 
DELETE FROM AvaliacaoDisciplinaAluno WHERE id IS NULL or idNumeroAluno is null or idNumeroDisciplina IS NULL or nota IS NULL; 
select count(*) from AvaliacaoDisciplinaAluno WHERE id IS NULL or idNumeroAluno is null or idNumeroDisciplina IS NULL or nota IS NULL; 
--tfcdisciplina
select count(*) from TFCDisciplina WHERE id IS NULL or idNumeroDisciplina is null or numeroTFC is null; 
DELETE FROM TFCDisciplina WHERE id IS NULL or idNumeroDisciplina is null or numeroTFC is null; 
select count(*) from TFCDisciplina WHERE id IS NULL or idNumeroDisciplina is null or numeroTFC is null; 
--tfctecnologia
select count(*) from TFCTecnologia WHERE id IS NULL or idTFC is null or idTecnologia is null; 
DELETE FROM  TFCTecnologia WHERE id IS NULL or idTFC is null or idTecnologia is null; 
select count(*) from TFCTecnologia WHERE id IS NULL or idTFC is null or idTecnologia is null; 
--tfccurso
select count(*) from TFCCurso WHERE id IS NULL or idTFC is null or idCurso is null; 
DELETE FROM  TFCCurso WHERE id IS NULL or idTFC is null or idCurso is null; 
select count(*) from TFCCurso WHERE id IS NULL or idTFC is null or idCurso is null; 
--inscricao
select count(*) from Inscricao WHERE id IS NULL or idTFC is null;
DELETE FROM  Inscricao WHERE id IS NULL or idTFC is null;
select count(*) from Inscricao WHERE id IS NULL or idTFC is null;
--historicotfc
select count(*) from HistoricoTFC WHERE id IS NULL or idTFC is null OR estado is null or idTFCNumerico IS NULL OR utilizador IS NULL;
DELETE FROM  HistoricoTFC WHERE id IS NULL or idTFC is null OR estado is null or idTFCNumerico IS NULL OR utilizador IS NULL;
select count(*) from HistoricoTFC WHERE id IS NULL or idTFC is null OR estado is null or idTFCNumerico IS NULL OR utilizador IS NULL;
--grupo
select count(*) from Grupo WHERE id IS NULL or confirmaAluno1 is null OR idNumeroAluno1 is null;
DELETE FROM Grupo WHERE id IS NULL or confirmaAluno1 is null OR idNumeroAluno1 is null;
select count(*) from Grupo WHERE id IS NULL or confirmaAluno1 is null OR idNumeroAluno1 is null;
--tfc
select count(*) from TFC WHERE id IS NULL ;
DELETE FROM TFC WHERE id IS NULL ;
select count(*) from  TFC WHERE id IS NULL ;
--professorndeisi
select count(*) from ProfessorNDEISI WHERE id IS NULL or departamentoAfeto IS NULL or email  IS NULL or numeroContato IS NULL or nome IS NULL;
DELETE FROM ProfessorNDEISI WHERE id IS NULL or departamentoAfeto IS NULL or email  IS NULL or numeroContato IS NULL or nome IS NULL;
select count(*) from ProfessorNDEISI WHERE id IS NULL or departamentoAfeto IS NULL or email  IS NULL or numeroContato IS NULL or nome IS NULL;
--professordeisi
select count(*) from ProfessorDEISI WHERE id IS NULL or nome IS NULL or numeroProfessor  IS NULL ;
DELETE FROM ProfessorDEISI WHERE id IS NULL or nome IS NULL or numeroProfessor  IS NULL ;
select count(*) from ProfessorDEISI WHERE id IS NULL or nome IS NULL or numeroProfessor  IS NULL ;
--empresa
select count(*) from Empresa_EntidadeExterna WHERE id IS NULL or nome IS NULL ;
DELETE FROM Empresa_EntidadeExterna WHERE id IS NULL or nome IS NULL ;
select count(*) from Empresa_EntidadeExterna WHERE id IS NULL or nome IS NULL ;
--utilizador
select count(*) from Utilizador WHERE id IS NULL ;
DELETE FROM Utilizador WHERE id IS NULL;
select count(*) from Utilizador WHERE id IS NULL ;


--alter tables para meter not nulls
BEGIN TRY
    BEGIN TRANSACTION;
		ALTER TABLE Curso ALTER COLUMN id bigint NOT NULL;
		ALTER TABLE Curso ALTER COLUMN nome VARCHAR(255) NOT NULL;

		ALTER TABLE Tecnologia ALTER COLUMN id BIGINT NOT NULL;
		ALTER TABLE Tecnologia ALTER COLUMN nome VARCHAR(255) NOT NULL;

		ALTER TABLE Disciplina ALTER COLUMN id BIGINT NOT NULL;
		ALTER TABLE Disciplina ALTER COLUMN cursoAssociado BIGINT NOT NULL;
		ALTER TABLE Disciplina ALTER COLUMN nome VARCHAR(255) NOT NULL;

		ALTER TABLE Aluno ALTER COLUMN id BIGINT NOT NULL;
		ALTER TABLE Aluno ALTER COLUMN nome VARCHAR(255) NOT NULL;
		ALTER TABLE Aluno ALTER COLUMN numeroAluno varchar(255) NOT NULL;

		ALTER TABLE AvaliacaoDisciplinaAluno ALTER COLUMN id bigint NOT NULL;
		ALTER TABLE AvaliacaoDisciplinaAluno ALTER COLUMN idNumeroAluno bigint NOT NULL;
		ALTER TABLE AvaliacaoDisciplinaAluno ALTER COLUMN idNumeroDisciplina bigint NOT NULL;
		ALTER TABLE AvaliacaoDisciplinaAluno ALTER COLUMN nota int NOT NULL;

		--tfcdisciplina
		ALTER TABLE TFCDisciplina ALTER COLUMN id bigint NOT NULL;
		ALTER TABLE TFCDisciplina ALTER COLUMN idNumeroDisciplina bigint NOT NULL;
		ALTER TABLE TFCDisciplina ALTER COLUMN numeroTFC bigint NOT NULL;

		--tfctecnologia
		ALTER TABLE TFCTecnologia ALTER COLUMN id bigint NOT NULL;
		ALTER TABLE TFCTecnologia ALTER COLUMN idTFC bigint NOT NULL;
		ALTER TABLE TFCTecnologia ALTER COLUMN idTecnologia bigint NOT NULL;

		--tfccurso
		ALTER TABLE TFCCurso ALTER COLUMN id bigint NOT NULL;
		ALTER TABLE TFCCurso ALTER COLUMN idTFC bigint NOT NULL;
		ALTER TABLE TFCCurso ALTER COLUMN idCurso bigint NOT NULL;
		ALTER TABLE Utilizador ALTER COLUMN id bigint NOT NULL;

		ALTER TABLE Inscricao ALTER COLUMN id BIGINT NOT NULL;
		ALTER TABLE Inscricao ALTER COLUMN idTFC varchar(255) NOT NULL;

		ALTER TABLE HistoricoTFC ALTER COLUMN id BIGINT NOT NULL;
		ALTER TABLE HistoricoTFC ALTER COLUMN idTFC VARCHAR(255) NOT NULL;
		ALTER TABLE HistoricoTFC ALTER COLUMN estado VARCHAR(255) NOT NULL;
		ALTER TABLE HistoricoTFC ALTER COLUMN idTFCNumerico BIGINT NOT NULL;
		ALTER TABLE HistoricoTFC ALTER COLUMN utilizador VARCHAR(255) NOT NULL;

		ALTER TABLE Grupo ALTER COLUMN id BIGINT NOT NULL;
		ALTER TABLE Grupo ALTER COLUMN confirmaAluno1 TINYINT NOT NULL;
		ALTER TABLE Grupo ALTER COLUMN idNumeroAluno1 VARCHAR(255) NOT NULL;
		ALTER TABLE TFC ALTER COLUMN id BIGINT NOT NULL;
		COMMIT TRANSACTION; 
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;

GO
--3 criar indices

---- curso
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_curso_id' AND object_id = OBJECT_ID('Curso') or
		  name = 'index_curso_nome' AND object_id = OBJECT_ID('Curso')		
)
BEGIN
    CREATE INDEX index_curso_id ON Curso(id);
	CREATE INDEX index_curso_nome ON Curso(nome);
END;
---- tecnologia
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_tecnologia_id' AND object_id = OBJECT_ID('Tecnologia') or
		  name = 'index_tecnologia_nome' AND object_id = OBJECT_ID('Tecnologia')		
)
BEGIN
    CREATE INDEX index_tecnologia_id ON Tecnologia(id);
	CREATE INDEX index_tecnologia_nome ON Tecnologia(nome);
END;
---- disciplina
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_disciplina_id' AND object_id = OBJECT_ID('Disciplina') or
		  name = 'index_disciplina_curso_associado' AND object_id = OBJECT_ID('Disciplina')	or
		  name = 'index_disciplina_nome' AND object_id = OBJECT_ID('Disciplina')
)
BEGIN
    CREATE INDEX index_disciplina_id ON Disciplina(id);
	CREATE INDEX index_disciplina_curso_associado ON Disciplina(cursoAssociado);
	CREATE INDEX index_disciplina_nome ON Disciplina(nome);
END;
---- tfccurso
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_tfc_curso_id' AND object_id = OBJECT_ID('TFCCurso') or
		  name = 'index_tfc_curso_idCurso' AND object_id = OBJECT_ID('TFCCurso') or
		  name = 'index_tfc_curso_idTfc' AND object_id = OBJECT_ID('TFCCurso')
)
BEGIN
    CREATE INDEX index_tfc_curso_id ON TFCCurso(id);
	CREATE INDEX index_tfc_curso_idCurso ON TFCCurso(idCurso);
	CREATE INDEX index_tfc_curso_idTfc ON TFCCurso(idTFC);
END;
---- tfctecnologia
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_tfc_tecnologia_id' AND object_id = OBJECT_ID('TFCTecnologia') or
		  name = 'index_tfc_tecnologia_idTFC' AND object_id = OBJECT_ID('TFCTecnologia') or
		  name = 'index_tfc_tecnologia_idTecnologia' AND object_id = OBJECT_ID('TFCTecnologia')
)
BEGIN
    CREATE INDEX index_tfc_tecnologia_id ON TFCTecnologia(id);
	CREATE INDEX index_tfc_tecnologia_idTFC ON TFCTecnologia(idTFC);
	CREATE INDEX index_tfc_tecnologia_idTecnologia ON TFCTecnologia(idTecnologia);
END;
---- tfcdisciplina
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_tfc_disciplina_id' AND object_id = OBJECT_ID('TFCDisciplina') or
		  name = 'index_tfc_disciplina_idNumeroDisciplina' AND object_id = OBJECT_ID('TFCDisciplina') or
		  name = 'index_tfc_disciplina_numeroTFC' AND object_id = OBJECT_ID('TFCDisciplina')
)
BEGIN
    CREATE INDEX index_tfc_disciplina_id ON TFCDisciplina(id);
	CREATE INDEX index_tfc_disciplina_idNumeroDisciplina ON TFCDisciplina(idNumeroDisciplina);
	CREATE INDEX index_tfc_disciplina_numeroTFC ON TFCDisciplina(numeroTFC);
END;
---- avalicao disciplina aluno
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_avaliacao_disciplina_aluno_id' AND object_id = OBJECT_ID('AvaliacaoDisciplinaAluno') or
		  name = 'index_avaliacao_disciplina_aluno_idNumeroAluno' AND object_id = OBJECT_ID('AvaliacaoDisciplinaAluno') or
		  name = 'index_avaliacao_disciplina_aluno_idNumeroDisciplina' AND object_id = OBJECT_ID('AvaliacaoDisciplinaAluno') or
		  name = 'index_avaliacao_disciplina_aluno_nota' AND object_id = OBJECT_ID('AvaliacaoDisciplinaAluno')
)
BEGIN
    CREATE INDEX index_avaliacao_disciplina_aluno_id ON AvaliacaoDisciplinaAluno(id);
	CREATE INDEX index_avaliacao_disciplina_aluno_idNumeroAluno ON AvaliacaoDisciplinaAluno(idNumeroAluno);
	CREATE INDEX index_avaliacao_disciplina_aluno_idNumeroDisciplina ON AvaliacaoDisciplinaAluno(idNumeroDisciplina);
	CREATE INDEX index_avaliacao_disciplina_aluno_nota ON AvaliacaoDisciplinaAluno(nota);
END;
---- aluno
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_aluno_id' AND object_id = OBJECT_ID('Aluno') or
		  name = 'index_aluno_nome' AND object_id = OBJECT_ID('Aluno') or
		  name = 'index_aluno_numeroAluno' AND object_id = OBJECT_ID('Aluno')
)
BEGIN
    CREATE INDEX index_aluno_id ON Aluno(id);
	CREATE INDEX index_aluno_nome ON Aluno(nome);
	CREATE INDEX index_aluno_numeroAluno ON Aluno(numeroAluno);
END;
---- inscricao
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_inscricao_id' AND object_id = OBJECT_ID('Inscricao') or
		  name = 'index_inscricao_idTFC' AND object_id = OBJECT_ID('Inscricao')
)
BEGIN
    CREATE INDEX index_inscricao_id ON Inscricao(id);
	CREATE INDEX index_inscricao_idTFC ON Inscricao(idTFC);
END;
---- historico tfc
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_historico_tfc_id' AND object_id = OBJECT_ID('HistoricoTFC') or
		  name = 'index_historico_tfc_estado' AND object_id = OBJECT_ID('HistoricoTFC') or
		  name = 'index_historico_tfc_idTFC' AND object_id = OBJECT_ID('HistoricoTFC') or
		  name = 'index_historico_tfc_idTFCNumerico' AND object_id = OBJECT_ID('HistoricoTFC') or
		  name = 'index_historico_tfc_utilizador' AND object_id = OBJECT_ID('HistoricoTFC')
)
BEGIN
    CREATE INDEX index_historico_tfc_id ON HistoricoTFC(id);
	CREATE INDEX index_historico_tfc_estado ON HistoricoTFC(estado);
	CREATE INDEX index_historico_tfc_idTFC ON HistoricoTFC(idTFC);
	CREATE INDEX index_historico_tfc_idTFCNumerico ON HistoricoTFC(idTFCNumerico);
	CREATE INDEX index_historico_tfc_utilizador ON HistoricoTFC(utilizador);
END;
---- grupo
IF NOT EXISTS (
    SELECT *
    FROM sys.indexes
    WHERE name = 'index_grupo_id' AND object_id = OBJECT_ID('Grupo') or
		  name = 'index_grupo_confirmaAluno1' AND object_id = OBJECT_ID('Grupo') or
		  name = 'index_grupo_idNumeroAluno1' AND object_id = OBJECT_ID('Grupo')
)
BEGIN
    CREATE INDEX index_grupo_id ON Grupo(id);
	CREATE INDEX index_grupo_confirmaAluno1 ON Grupo(confirmaAluno1);
	CREATE INDEX index_grupo_idNumeroAluno1 ON Grupo(idNumeroAluno1);
END;